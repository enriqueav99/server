services:
  prometheus:
    image: prom/prometheus
    user: root
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitor_net
      - traefik_proxy
    restart: unless-stopped
    volumes:
      - ${DATA_DIRECTORY}/prom-gra/prometheus:/etc/prometheus
      - ${DATA_DIRECTORY}/prom-gra/prom_data:/prometheus

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitor_net
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:v0.23.0
    container_name: alertmanager
    restart: unless-stopped
    volumes:
      - ${DATA_DIRECTORY}/alertmanager-config:/config
      - ${DATA_DIRECTORY}/alertmanager:/data
    command: --config.file=/config/alertmanager.yml --log.level=debug
    networks:
      - monitor_net
      - traefik_proxy
    depends_on:
      - prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    user: root
    networks:
      - traefik_proxy
      - monitor_net
    depends_on:
      - prometheus
    environment:
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_SERVER_DOMAIN="grafana.${DOMINIO}"
      - GF_SERVER_ROOT_URL=https://grafana.${DOMINIO}
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    volumes:
      - ./entrypoint.sh:/app/entrypoint.sh
      - ${DATA_DIRECTORY}/prom-gra/grafana/config/dashboards:/etc/grafana/provisioning/datasources
      - ${DATA_DIRECTORY}/prom-gra/grafana/config/datasources:/etc/grafana/datasources
      - ${DATA_DIRECTORY}/prom-gra/grafana/config/plugins:/var/lib/grafana/plugins
      - ${DATA_DIRECTORY}/prom-gra/grafana/grafana_data:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMINIO}`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.tls.certresolver=myresolver
      - "traefik.http.routers.grafana.middlewares=authentik@docker"

networks:
  monitor_net:
    driver: bridge
